variables:
  GO_VERSION: "1.18"
  API_NAME: "api-bee"
  FOLDER_API: "API"
  TAG_LATEST: $CI_REGISTRY_IMAGE/golang-api:latest
  TAG_COMMIT: t-golang-api:$CI_COMMIT_SHORT_SHA
  CONTAINER_NAME: "c-golang-api"

stages:
  - build
  - test
  - publish

.golang_setup:
  image: golang:$GO_VERSION-alpine
  needs: []

golang:build:
  stage: build
  extends: .golang_setup
  artifacts:
    expire_in: 30 days
    paths:
      - "./$FOLDER_API/dist/$API_NAME"
  script:
    - cd $FOLDER_API && go build -o $API_NAME -v ./...

golang:test:
  stage: test
  extends: .golang_setup
  script:
    - cd ./$FOLDER_API/tests && go test -o api_test

golang:publish:
  image: docker:latest
  stage: publish
  needs: ["golang:build", "golang:test"]
  services:
    - docker:dind
  script:
    - docker login docker-registry.univ-nantes.fr -u $UNIV_LOGIN -p $UNIV_PASSWORD 
    - docker build -t $TAG_LATEST ./$FOLDER_API/.
    - docker push $TAG_LATEST

golang:deploy:
  image: alpine:latest
  stage: publish
  needs: ["golang:publish"]
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ssh -f -N -L:2222:$SERVER_IP:22 E21A432S@bastion.etu.univ-nantes.fr
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login docker-registry.univ-nantes.fr -u $UNIV_LOGIN -p $UNIV_PASSWORD"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $TAG_LATEST"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f $CONTAINER_NAME || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -dp 8080:8080 --name $CONTAINER_NAME $TAG_COMMIT"