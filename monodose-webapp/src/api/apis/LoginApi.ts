/* tslint:disable */
/* eslint-disable */
/**
 * Bee\'s Dream beekeepers and monodoses APIs
 * Bee\'s Dream beekeepers and monodoses APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: by@carrier.pigeon
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ErrorsJson,
    ErrorsJsonFromJSON,
    ErrorsJsonToJSON,
    Login,
    LoginFromJSON,
    LoginToJSON,
} from '../models';

export interface LoginRequest {
    login: Login;
}

/**
 * 
 */
export class LoginApi extends runtime.BaseAPI {

    /**
     * Ask for login by send Login object in the request body
     * Ask for login
     */
    async loginRaw(requestParameters: LoginRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.login === null || requestParameters.login === undefined) {
            throw new runtime.RequiredError('login','Required parameter requestParameters.login was null or undefined when calling login.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/login`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LoginToJSON(requestParameters.login),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Ask for login by send Login object in the request body
     * Ask for login
     */
    async login(requestParameters: LoginRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<void> {
        await this.loginRaw(requestParameters, initOverrides);
    }

}
