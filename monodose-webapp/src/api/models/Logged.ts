/* tslint:disable */
/* eslint-disable */
/**
 * Bee\'s Dream beekeepers and monodoses APIs
 * Bee\'s Dream beekeepers and monodoses APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: by@carrier.pigeon
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Information,
    InformationFromJSON,
    InformationFromJSONTyped,
    InformationToJSON,
} from './Information';

/**
 * 
 * @export
 * @interface Logged
 */
export interface Logged {
    /**
     * 
     * @type {number}
     * @memberof Logged
     */
    id?: number;
    /**
     * 
     * @type {Information}
     * @memberof Logged
     */
    informations?: Information;
    /**
     * 
     * @type {string}
     * @memberof Logged
     */
    login?: string;
    /**
     * 
     * @type {string}
     * @memberof Logged
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof Logged
     */
    role?: string;
    /**
     * 
     * @type {string}
     * @memberof Logged
     */
    token?: string;
}

export function LoggedFromJSON(json: any): Logged {
    return LoggedFromJSONTyped(json, false);
}

export function LoggedFromJSONTyped(json: any, ignoreDiscriminator: boolean): Logged {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'informations': !exists(json, 'informations') ? undefined : InformationFromJSON(json['informations']),
        'login': !exists(json, 'login') ? undefined : json['login'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'role': !exists(json, 'role') ? undefined : json['role'],
        'token': !exists(json, 'token') ? undefined : json['token'],
    };
}

export function LoggedToJSON(value?: Logged | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'informations': InformationToJSON(value.informations),
        'login': value.login,
        'password': value.password,
        'role': value.role,
        'token': value.token,
    };
}

